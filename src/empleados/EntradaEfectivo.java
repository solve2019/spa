/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package empleados;


import checador.accesoSistema;
import conex.conexion;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author desarrollo8
 */
public class EntradaEfectivo extends javax.swing.JDialog {
String idsocios="0",nombres="";
    /**
     * Creates new form EntradaySalida
     */
    public EntradaEfectivo(java.awt.Frame parent, boolean modal,String idsocio,String nombre) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(this);
        
        
        
        
        idsocios=idsocio;
        nombres=nombre;
        
        
        
                conexion con=new conexion();  
                try {
                    Statement st = con.getConnection().createStatement();
                    String sql="select * from tc_costos_gym where estatus=1";                
                    ResultSet rs=st.executeQuery(sql); 
                    while(rs.next()){
                        jcpago.addItem(rs.getString("nombre")+"-"+rs.getString("costo")+"-"+rs.getString("numeromeses")+"-"+rs.getString("tipo")+"-"+rs.getString("Id"));
                    }
                    st.close();
                    con.desconectar();                         
                } catch (SQLException ex) {       
                    JOptionPane.showMessageDialog(null, "Error al realizar el pago: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                }
        
        txttipo.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtnota1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        txtmonto1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jcpago = new javax.swing.JComboBox<>();
        txtdias = new javax.swing.JTextField();
        txttipo = new javax.swing.JTextField();
        tipopago = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jcsesiones1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtnombresesion = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jctiposesiones = new javax.swing.JComboBox<>();
        txtidcobro = new javax.swing.JTextField();
        jcdescuento = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtgrantotal = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtpromo = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        tipopago2 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtmonto = new javax.swing.JTextField();
        jdfecha = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtnota = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jcsesiones = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registro de Entrada de dinero");

        jPanel1.setBackground(new java.awt.Color(252, 251, 251));

        jPanel2.setBackground(new java.awt.Color(184, 168, 160));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REGISTRO DE PAGO");

        jPanel3.setBackground(new java.awt.Color(252, 249, 249));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Observaci√≥n");

        txtnota1.setColumns(20);
        txtnota1.setRows(5);
        txtnota1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnota1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnota1KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(txtnota1);

        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtmonto1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtmonto1.setForeground(new java.awt.Color(0, 102, 255));
        txtmonto1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmonto1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmonto1KeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Monto");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel7.setText("Pago");

        jcpago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona.." }));
        jcpago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcpagoItemStateChanged(evt);
            }
        });

        txtdias.setVisible(false);

        txttipo.setVisible(false);

        tipopago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EFECTIVO", "CREDITO", "AMEX" }));

        jLabel8.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel8.setText("Tipo Cobro");

        jcsesiones1.setVisible(false);
        jcsesiones1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel11.setVisible(false);
        jLabel11.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel11.setText("Numero de Sessiones");

        txtnombresesion.setVisible(false);

        jLabel12.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel12.setText("Tipo Sessiones");

        jctiposesiones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "REGULAR" }));

        txtidcobro.setVisible(false);

        jcdescuento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "10", "20", "30", "40", "50", "60" }));
        jcdescuento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcdescuentoItemStateChanged(evt);
            }
        });

        jLabel13.setText("Descuento:");

        txtgrantotal.setBackground(new java.awt.Color(0, 0, 0));
        txtgrantotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtgrantotal.setForeground(new java.awt.Color(0, 204, 0));

        jLabel14.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel14.setText("Descuento promo:");

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Total:");

        txtpromo.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtpromo.setForeground(new java.awt.Color(0, 102, 255));
        txtpromo.setText("0");
        txtpromo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtpromoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtpromoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtpromoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tipopago, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtidcobro, javax.swing.GroupLayout.DEFAULT_SIZE, 7, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txttipo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jctiposesiones, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtnombresesion, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jcsesiones1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtmonto1, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                    .addComponent(jcpago, 0, 229, Short.MAX_VALUE)
                                    .addComponent(txtgrantotal)
                                    .addComponent(txtpromo, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcdescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 26, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipopago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txttipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtnombresesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidcobro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtdias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jctiposesiones, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcsesiones1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcpago, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtmonto1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcdescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtpromo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtgrantotal, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Pago Normal", jPanel3);

        jPanel4.setVisible(false);

        jPanel5.setVisible(false);

        tipopago2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EFECTIVO", "CREDITO" }));

        jLabel9.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel9.setText("Tipo Cobro");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Monto");

        txtmonto.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtmonto.setForeground(new java.awt.Color(0, 102, 255));
        txtmonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmontoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmontoKeyTyped(evt);
            }
        });

        txtnota.setColumns(20);
        txtnota.setRows(5);
        txtnota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtnotaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtnotaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(txtnota);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Fecha Vence");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Observaci√≥n");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel10.setText("Numero de Sessiones");

        jcsesiones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/accept.png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(274, 274, 274))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(tipopago2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jdfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtmonto, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jcsesiones, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipopago2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtmonto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jdfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcsesiones, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pago Abierto", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 490, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("pago1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcpagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcpagoItemStateChanged
        // TODO add your handling code here:
        System.out.println("cambia el status");
        String pago=jcpago.getSelectedItem().toString();
        if(pago.equals("Selecciona..")){
            txtmonto1.setText("");
        }else{
            String[] datos = pago.split("-");
            String nombresesion=datos[0];
            String monto=datos[1];
            String dias=datos[2];
            String tipo=datos[3];
            String idcobro=datos[4];
            
            txtidcobro.setText(idcobro);
            txtnombresesion.setText(nombresesion);
            txtmonto1.setText(monto);
            txtdias.setText(dias);
            txttipo.setText(tipo);
        }

    }//GEN-LAST:event_jcpagoItemStateChanged

    private void txtmonto1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmonto1KeyTyped
        // TODO add your handling code here:
        if(txtmonto1.getText().trim().length()>=11){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_txtmonto1KeyTyped

    private void txtmonto1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmonto1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmonto1KeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        registrar2();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtnota1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnota1KeyTyped

    private void txtnota1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnota1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnota1KeyPressed

    private void txtmontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmontoKeyTyped
        // TODO add your handling code here:
        if(txtmonto.getText().trim().length()>=7){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
                evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_txtmontoKeyTyped

    private void txtmontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmontoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //registrar();
        }
    }//GEN-LAST:event_txtmontoKeyPressed

    private void txtnotaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnotaKeyTyped
        // TODO add your handling code here:
        if(txtnota.getText().trim().length()>=150){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
        }
    }//GEN-LAST:event_txtnotaKeyTyped

    private void txtnotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtnotaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            registrar();
        }
    }//GEN-LAST:event_txtnotaKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        registrar();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtpromoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpromoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtpromoKeyPressed

    private void txtpromoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpromoKeyTyped
        // TODO add your handling code here:
        if(txtpromo.getText().trim().length()>=9){
            //JOptionPane.showMessageDialog(null, "Solo acepta 15 caracteres", "Alerta", JOptionPane.ERROR_MESSAGE);
            evt.consume(); // ignorar el evento de teclado
        }else{
            if (((evt.getKeyChar() < '0') || (evt.getKeyChar() > '9')) && (evt.getKeyChar() != '.')){
               evt.consume(); // ignorar el evento de teclado
            }
        }
    }//GEN-LAST:event_txtpromoKeyTyped

    private void jcdescuentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcdescuentoItemStateChanged
        // TODO add your handling code here:
        String desc=jcdescuento.getSelectedItem().toString();
        String monto=txtmonto1.getText().trim();
        String promo=txtpromo.getText().trim();
        if(promo.equals("")){
            promo="0";
        }
        double total=0;
        if(desc.equals("")){
        }else if(monto.equals("")){
        }else{
            total=Double.parseDouble(monto);
            double descufin=Double.parseDouble(monto)*Double.parseDouble(desc);        
            descufin=descufin/100;
            System.out.println(total+" - "+descufin);
            total=total-descufin;
            System.out.println(""+total);

            total=total-Double.parseDouble(promo);
            txtgrantotal.setText(""+total);
        }
        
    }//GEN-LAST:event_jcdescuentoItemStateChanged

    private void txtpromoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtpromoKeyReleased
        // TODO add your handling code here:dd
        
        String desc=jcdescuento.getSelectedItem().toString();
        String monto=txtmonto1.getText().trim();
        String promo=txtpromo.getText().trim();
        if(promo.equals("")){
            promo="0";
        }
        double total=0;
        if(desc.equals("")){
        }else if(monto.equals("")){
        }else{
            total=Double.parseDouble(monto);
            double descufin=Double.parseDouble(monto)*Double.parseDouble(desc);        
            descufin=descufin/100;
            System.out.println(total+" - "+descufin);
            total=total-descufin;
            System.out.println(""+total);

            total=total-Double.parseDouble(promo);
            txtgrantotal.setText(""+total);
        }
    }//GEN-LAST:event_txtpromoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EntradaEfectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EntradaEfectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EntradaEfectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EntradaEfectivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EntradaEfectivo dialog = new EntradaEfectivo(new javax.swing.JFrame(), true, "0","");
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> jcdescuento;
    private javax.swing.JComboBox<String> jcpago;
    private javax.swing.JComboBox<String> jcsesiones;
    private javax.swing.JComboBox<String> jcsesiones1;
    private javax.swing.JComboBox<String> jctiposesiones;
    private com.toedter.calendar.JDateChooser jdfecha;
    private javax.swing.JComboBox<String> tipopago;
    private javax.swing.JComboBox<String> tipopago2;
    private javax.swing.JTextField txtdias;
    private javax.swing.JTextField txtgrantotal;
    private javax.swing.JTextField txtidcobro;
    private javax.swing.JTextField txtmonto;
    private javax.swing.JTextField txtmonto1;
    private javax.swing.JTextField txtnombresesion;
    private javax.swing.JTextArea txtnota;
    private javax.swing.JTextArea txtnota1;
    private javax.swing.JTextField txtpromo;
    private javax.swing.JTextField txttipo;
    // End of variables declaration//GEN-END:variables

    public void registrar(){
        String monto = txtmonto.getText().trim();
        Date fecha=jdfecha.getDate();
        String tipocobro=tipopago2.getSelectedItem().toString();
        //System.out.println(""+fecha);
        double montook = 0;
        if(monto.equals("")){
            txtmonto.requestFocus();
            JOptionPane.showMessageDialog(null, "El monto no debe de ir vacio.", "Alerta", JOptionPane.ERROR_MESSAGE);        
        }else if(fecha==null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de vencimiento.", "Alerta", JOptionPane.ERROR_MESSAGE);
        }else{    
            SimpleDateFormat fechaformateada = new SimpleDateFormat("yyyy-MM-dd");              
            String fechavencimiento=fechaformateada.format(fecha);
            System.out.println("fecha vence: "+fechavencimiento);
            boolean validador=true;
            try{
                montook = Double.parseDouble(monto);
                System.out.println(""+montook);
            } catch (NumberFormatException nfe) {
                validador=false;
                JOptionPane.showMessageDialog(null, "El monto es invalido favor de verificar.", "Alerta", JOptionPane.ERROR_MESSAGE);        
            }
            if(validador==true){
                //modificar la cantidad de efectivo de caja
                //registrar el movimiento de entrada  
                
                conexion con=new conexion();  
                try {
                    Statement st = con.getConnection().createStatement();
                    String sql="insert into to_pagos (fecha_pago,idr_empleado,monto,comentario,fecha_vence,personacobro,tipopago,numero_sesiones) values(now(),"+idsocios+",'"+montook+"','"+txtnota.getText().trim()+"','"+fechavencimiento+"','"+accesoSistema.nombreuser+"','"+tipocobro+"','"+jcsesiones.getSelectedItem().toString()+"')";                
                    st.executeUpdate(sql);                
                    sql="update tc_empleados set fecha_vencimiento='"+fechavencimiento+"' where id_empleado="+idsocios;                                                   
                    st.executeUpdate(sql);      
                    
                    if(tipocobro.equals("EFECTIVO")){
                        sql="update to_cierre_caja set efectivo=efectivo+"+montook+" where id_cierre_caja=1";
                        st.executeUpdate(sql);
                    }else{
                        sql="update to_cierre_caja set tarjeta=tarjeta+"+montook+" where id_cierre_caja=1";
                        st.executeUpdate(sql);
                    }
                    System.out.println(sql);                    
                    st.close();
                    con.desconectar();     
                    
                    Ticket imprime=new Ticket();                    
                    imprime.ReImprimirDocumento(nombres,montook+"",fechavencimiento,"");
                    
                    cat_empleados.obtenpagos(idsocios,nombres);
                    try {
                        cat_empleados.llenarTablaEmp();
                    } catch (Exception ex) {
                        Logger.getLogger(EntradaEfectivo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    JOptionPane.showMessageDialog(null, "El pago se realizo correctamente.", "Registro de Entrada", JOptionPane.INFORMATION_MESSAGE);        
                    dispose();
                } catch (SQLException ex) {       
                    JOptionPane.showMessageDialog(null, "Error al realizar el pago: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                }  
                                                                
            }
        }
    }
    
    
    
    public void registrar2(){
        String monto = txtmonto1.getText().trim();        
        String dias=txtdias.getText().trim();
        String tipo=txttipo.getText().trim();
        String tipocobro=tipopago.getSelectedItem().toString();
        String nombresesion=txtnombresesion.getText().trim();
        String numerosesiones=jcsesiones1.getSelectedItem().toString();
        String idcobro=txtidcobro.getText().trim();
        String promo=txtpromo.getText().trim();
        if(promo.equals("")){
            promo="0";
        }
        double promocion=Double.parseDouble(promo);
        
        double montototal=Double.parseDouble(monto);
        int descuento=Integer.parseInt(jcdescuento.getSelectedItem().toString());
        int totaldescuento=100-descuento;
        
        double totaldesc=montototal*totaldescuento;
        totaldesc=totaldesc/100;
        montototal=montototal*totaldescuento;
        montototal=montototal/100;
        
        montototal=montototal-promocion;
        monto=montototal+"";
        
        
        String tiposesion=jctiposesiones.getSelectedItem().toString();
        if(tiposesion.equals("REGULAR")){
            numerosesiones="12";
        }
        if(tiposesion.equals("ADICIONALES")){
            numerosesiones="8";
        }
                
        //System.out.println(""+fecha);
        double montook = 0;
        if(monto.equals("")){
            txtmonto1.requestFocus();
            JOptionPane.showMessageDialog(null, "El monto no debe de ir vacio.", "Alerta", JOptionPane.ERROR_MESSAGE);        
        }else{                            
            boolean validador=true;
            try{
                montook = Double.parseDouble(monto);
                System.out.println(""+montook);
            } catch (NumberFormatException nfe) {
                validador=false;
                JOptionPane.showMessageDialog(null, "El monto es invalido favor de verificar.", "Alerta", JOptionPane.ERROR_MESSAGE);        
            }
            if(validador==true){
                //modificar la cantidad de efectivo de caja
                //registrar el movimiento de entrada  
                String fechavencimientos="";
                if(tipo.equals("DIA")){
                    String a="SELECT DATE_ADD(NOW(), INTERVAL "+dias+" DAY) as dias";
                    conexion con=new conexion();  
                    try {
                        Statement st = con.getConnection().createStatement();                        
                        ResultSet rs=st.executeQuery(a);   
                        if(rs.next()){
                            fechavencimientos=rs.getString("dias");
                        }
                        st.close();
                        con.desconectar();                        
                    } catch (SQLException ex) {       
                        JOptionPane.showMessageDialog(null, "Error al realizar el pago: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    Calendar c1 = GregorianCalendar.getInstance();
                    int diass=0;
                    diass=Integer.parseInt(dias);
                    c1.add(Calendar.MONTH, diass);
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    System.out.println("Fecha Formateada: "+sdf.format(c1.getTime()));
                    fechavencimientos=sdf.format(c1.getTime());
                }
                
                conexion con=new conexion();  
                try {
                    Statement st = con.getConnection().createStatement();
                    Statement st2 = con.getConnection().createStatement();
                    String sql="select paquete from tc_costos_gym where Id='"+idcobro+"'";                
                    ResultSet rs=st.executeQuery(sql);  
                    String paquete="";
                    if(rs.next()){
                        paquete=rs.getString("paquete");
                    }
                    if(paquete.equals("NO")){
                        sql="update tc_empleados set fecha_vencimiento='"+fechavencimientos+"' where id_empleado="+idsocios;                                                   
                        st.executeUpdate(sql); 


                        sql="insert into to_pagos (fecha_pago,idr_empleado,monto,comentario,fecha_vence,personacobro,tipopago,tratamiento,numero_sesiones,sesiones_realizadas,idr_costo,descuento,totaldescuento) values(now(),"+idsocios+",'"+montook+"','"+txtnota1.getText().trim()+"','"+fechavencimientos+"','"+accesoSistema.nombreuser+"','"+tipocobro+"','"+nombresesion+"','"+numerosesiones+"','"+numerosesiones+"','"+idcobro+"','"+descuento+"','"+totaldesc+"')";                
                        st.executeUpdate(sql);                
                        sql="update tc_empleados set fecha_vencimiento='"+fechavencimientos+"' where id_empleado="+idsocios;                                                   
                        st.executeUpdate(sql); 
                        if(tipocobro.equals("EFECTIVO")){
                            sql="update to_cierre_caja set efectivo=efectivo+"+montook+" where id_cierre_caja=1";
                            st.executeUpdate(sql);
                        }else{
                            sql="update to_cierre_caja set tarjeta=tarjeta+"+montook+" where id_cierre_caja=1";
                            st.executeUpdate(sql);
                        }
                        System.out.println(sql);
                    }else{
                        
                        sql="insert into to_pagos (fecha_pago,idr_empleado,monto,comentario,fecha_vence,personacobro,tipopago,tratamiento,numero_sesiones,sesiones_realizadas,idr_costo,descuento,totaldescuento,paquete) values(now(),"+idsocios+",'"+montook+"','"+txtnota1.getText().trim()+"','"+fechavencimientos+"','"+accesoSistema.nombreuser+"','"+tipocobro+"','"+nombresesion+"','0','0','"+idcobro+"','"+descuento+"','"+totaldesc+"','SI')";                
                        st.executeUpdate(sql);                
                        sql="update tc_empleados set fecha_vencimiento='"+fechavencimientos+"' where id_empleado="+idsocios;                                                   
                        st.executeUpdate(sql); 
                        if(tipocobro.equals("EFECTIVO")){
                            sql="update to_cierre_caja set efectivo=efectivo+"+montook+" where id_cierre_caja=1";
                            st.executeUpdate(sql);
                        }else{
                            sql="update to_cierre_caja set tarjeta=tarjeta+"+montook+" where id_cierre_caja=1";
                            st.executeUpdate(sql);
                        }
                        
                        
                        sql="select id_zona,nombre from to_paquetes,tc_costos_gym where tc_costos_gym.Id=id_zona and idpago='"+idcobro+"'";      
                        rs=st.executeQuery(sql);                          
                        while(rs.next()){
                            String id=rs.getString("id_zona");
                            String nombre=rs.getString("nombre");
                            String sql2="insert into to_pagos (fecha_pago,idr_empleado,monto,comentario,fecha_vence,personacobro,tipopago,tratamiento,numero_sesiones,sesiones_realizadas,idr_costo,descuento,totaldescuento,paquete) values(now(),"+idsocios+",'0','"+txtnota1.getText().trim()+"','"+fechavencimientos+"','"+accesoSistema.nombreuser+"','"+tipocobro+"','"+nombre+" "+nombresesion+"','"+numerosesiones+"','"+numerosesiones+"','"+id+"','0','0','NO')";                
                            st2.executeUpdate(sql2);
                        }
                    
                    }
                    
                    
                    st.close();
                    con.desconectar();     
                    
                    Ticket imprime=new Ticket();                    
                    imprime.ReImprimirDocumento(nombres,montook+"",fechavencimientos,nombresesion);
                    
                    cat_empleados.obtenpagos(idsocios,nombres);
                    try {
                        cat_empleados.llenarTablaEmp();
                    } catch (Exception ex) {
                        Logger.getLogger(EntradaEfectivo.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    JOptionPane.showMessageDialog(null, "El pago se realizo correctamente.", "Registro de Entrada", JOptionPane.INFORMATION_MESSAGE);        
                    dispose();
                } catch (SQLException ex) {       
                    JOptionPane.showMessageDialog(null, "Error al realizar el pago: "+ex, "Error", JOptionPane.ERROR_MESSAGE);
                }  
                                                                
            }
        }
    }
}
